#define ATOM_abort MK_ATOM("abort")
#define ATOM_aborted MK_ATOM("$aborted")
#define ATOM_abs MK_ATOM("abs")
#define ATOM_access MK_ATOM("access")
#define ATOM_acos MK_ATOM("acos")
#define ATOM_agc MK_ATOM("agc")
#define ATOM_agc_gained MK_ATOM("agc_gained")
#define ATOM_agc_margin MK_ATOM("agc_margin")
#define ATOM_agc_time MK_ATOM("agc_time")
#define ATOM_alias MK_ATOM("alias")
#define ATOM_allow_variable_name_as_functor MK_ATOM("allow_variable_name_as_functor")
#define ATOM_alnum MK_ATOM("alnum")
#define ATOM_alpha MK_ATOM("alpha")
#define ATOM_alternative MK_ATOM("alternative")
#define ATOM_and MK_ATOM("/\\")
#define ATOM_anonvar MK_ATOM("_")
#define ATOM_append MK_ATOM("append")
#define ATOM_ar_equals MK_ATOM("=:=")
#define ATOM_ar_not_equal MK_ATOM("=\\=")
#define ATOM_argument MK_ATOM("argument")
#define ATOM_argumentlimit MK_ATOM("argumentlimit")
#define ATOM_ascii MK_ATOM("ascii")
#define ATOM_asin MK_ATOM("asin")
#define ATOM_assert MK_ATOM("assert")
#define ATOM_asserta MK_ATOM("asserta")
#define ATOM_at MK_ATOM("at")
#define ATOM_at_equals MK_ATOM("=@=")
#define ATOM_at_exit MK_ATOM("at_exit")
#define ATOM_at_larger MK_ATOM("@>")
#define ATOM_at_larger_eq MK_ATOM("@>=")
#define ATOM_at_not_equals MK_ATOM("\\=@=")
#define ATOM_at_smaller MK_ATOM("@<")
#define ATOM_at_smaller_eq MK_ATOM("@=<")
#define ATOM_atan MK_ATOM("atan")
#define ATOM_atom MK_ATOM("atom")
#define ATOM_atom_garbage_collection MK_ATOM("atom_garbage_collection")
#define ATOM_atomic MK_ATOM("atomic")
#define ATOM_atoms MK_ATOM("atoms")
#define ATOM_att MK_ATOM("att")
#define ATOM_attributes MK_ATOM("attributes")
#define ATOM_attvar MK_ATOM("attvar")
#define ATOM_autoload MK_ATOM("autoload")
#define ATOM_backquoted_string MK_ATOM("backquoted_string")
#define ATOM_backslash MK_ATOM("\\")
#define ATOM_backtrace MK_ATOM("backtrace")
#define ATOM_bar MK_ATOM("|")
#define ATOM_begin MK_ATOM("begin")
#define ATOM_binary MK_ATOM("binary")
#define ATOM_bind MK_ATOM("bind")
#define ATOM_block MK_ATOM("block")
#define ATOM_bof MK_ATOM("bof")
#define ATOM_bom MK_ATOM("bom")
#define ATOM_bool MK_ATOM("bool")
#define ATOM_brace_term_position MK_ATOM("brace_term_position")
#define ATOM_break MK_ATOM("break")
#define ATOM_btree MK_ATOM("btree")
#define ATOM_buffer MK_ATOM("buffer")
#define ATOM_buffer_size MK_ATOM("buffer_size")
#define ATOM_built_in_procedure MK_ATOM("built_in_procedure")
#define ATOM_busy MK_ATOM("busy")
#define ATOM_byte MK_ATOM("byte")
#define ATOM_call MK_ATOM("call")
#define ATOM_callable MK_ATOM("callable")
#define ATOM_callpred MK_ATOM("$callpred")
#define ATOM_canceled MK_ATOM("canceled")
#define ATOM_case_sensitive_file_names MK_ATOM("case_sensitive_file_names")
#define ATOM_catch MK_ATOM("catch")
#define ATOM_ceil MK_ATOM("ceil")
#define ATOM_ceiling MK_ATOM("ceiling")
#define ATOM_char_type MK_ATOM("char_type")
#define ATOM_character MK_ATOM("character")
#define ATOM_character_code MK_ATOM("character_code")
#define ATOM_character_escapes MK_ATOM("character_escapes")
#define ATOM_chars MK_ATOM("chars")
#define ATOM_chdir MK_ATOM("chdir")
#define ATOM_chmod MK_ATOM("chmod")
#define ATOM_choice MK_ATOM("choice")
#define ATOM_clause MK_ATOM("clause")
#define ATOM_clause_reference MK_ATOM("clause_reference")
#define ATOM_close MK_ATOM("close")
#define ATOM_close_on_abort MK_ATOM("close_on_abort")
#define ATOM_close_option MK_ATOM("close_option")
#define ATOM_cm MK_ATOM("cm")
#define ATOM_cntrl MK_ATOM("cntrl")
#define ATOM_co MK_ATOM("co")
#define ATOM_codes MK_ATOM("codes")
#define ATOM_collected MK_ATOM("collected")
#define ATOM_collections MK_ATOM("collections")
#define ATOM_colon MK_ATOM(":")
#define ATOM_comma MK_ATOM(",")
#define ATOM_comments MK_ATOM("comments")
#define ATOM_compound MK_ATOM("compound")
#define ATOM_context MK_ATOM("context")
#define ATOM_context_module MK_ATOM("context_module")
#define ATOM_continue MK_ATOM("continue")
#define ATOM_core MK_ATOM("core")
#define ATOM_core_left MK_ATOM("core_left")
#define ATOM_cos MK_ATOM("cos")
#define ATOM_cputime MK_ATOM("cputime")
#define ATOM_create MK_ATOM("create")
#define ATOM_csym MK_ATOM("csym")
#define ATOM_csymf MK_ATOM("csymf")
#define ATOM_cumulative MK_ATOM("cumulative")
#define ATOM_curl MK_ATOM("{}")
#define ATOM_current MK_ATOM("current")
#define ATOM_current_input MK_ATOM("current_input")
#define ATOM_current_output MK_ATOM("current_output")
#define ATOM_cut MK_ATOM("!")
#define ATOM_cut_call MK_ATOM("cut_call")
#define ATOM_cut_exit MK_ATOM("cut_exit")
#define ATOM_cut_parent MK_ATOM("cut_parent")
#define ATOM_cutted MK_ATOM("cut")
#define ATOM_date MK_ATOM("date")
#define ATOM_dc_call_prolog MK_ATOM("$c_call_prolog")
#define ATOM_db_reference MK_ATOM("db_reference")
#define ATOM_dcall MK_ATOM("<meta-call>")
#define ATOM_dcall_cleanup MK_ATOM("$call_cleanup")
#define ATOM_dcatch MK_ATOM("$catch")
#define ATOM_dcut MK_ATOM("$cut")
#define ATOM_dde_error MK_ATOM("dde_error")
#define ATOM_dde_handle MK_ATOM("dde_handle")
#define ATOM_debug MK_ATOM("debug")
#define ATOM_debug_on_error MK_ATOM("debug_on_error")
#define ATOM_debugger_print_options MK_ATOM("debugger_print_options")
#define ATOM_debugger_show_context MK_ATOM("debugger_show_context")
#define ATOM_debugging MK_ATOM("debugging")
#define ATOM_dec10 MK_ATOM("dec10")
#define ATOM_default MK_ATOM("default")
#define ATOM_defined MK_ATOM("defined")
#define ATOM_delete MK_ATOM("delete")
#define ATOM_depth_limit_exceeded MK_ATOM("depth_limit_exceeded")
#define ATOM_destroy MK_ATOM("destroy")
#define ATOM_detached MK_ATOM("detached")
#define ATOM_detect MK_ATOM("detect")
#define ATOM_development MK_ATOM("development")
#define ATOM_dexit MK_ATOM("$exit")
#define ATOM_dforeign_registered MK_ATOM("$foreign_registered")
#define ATOM_dgarbage_collect MK_ATOM("$garbage_collect")
#define ATOM_digit MK_ATOM("digit")
#define ATOM_directory MK_ATOM("directory")
#define ATOM_discontiguous MK_ATOM("discontiguous")
#define ATOM_div MK_ATOM("//")
#define ATOM_divide MK_ATOM("/")
#define ATOM_dload MK_ATOM("$load")
#define ATOM_dmessage_queue MK_ATOM("$message_queue")
#define ATOM_dmutex MK_ATOM("$mutex")
#define ATOM_domain_error MK_ATOM("domain_error")
#define ATOM_dos MK_ATOM("dos")
#define ATOM_dot MK_ATOM(".")
#define ATOM_dots MK_ATOM("dots")
#define ATOM_double_quotes MK_ATOM("double_quotes")
#define ATOM_doublestar MK_ATOM("**")
#define ATOM_dprof_node MK_ATOM("$profile_node")
#define ATOM_dstream MK_ATOM("$stream")
#define ATOM_dthread_init MK_ATOM("$thread_init")
#define ATOM_dthrow MK_ATOM("$throw")
#define ATOM_dtime MK_ATOM("$time")
#define ATOM_dwakeup MK_ATOM("$wakeup")
#define ATOM_dynamic MK_ATOM("dynamic")
#define ATOM_e MK_ATOM("e")
#define ATOM_encoding MK_ATOM("encoding")
#define ATOM_end MK_ATOM("end")
#define ATOM_end_of_file MK_ATOM("end_of_file")
#define ATOM_end_of_line MK_ATOM("end_of_line")
#define ATOM_end_of_stream MK_ATOM("end_of_stream")
#define ATOM_environment MK_ATOM("environment")
#define ATOM_eof MK_ATOM("eof")
#define ATOM_eof_action MK_ATOM("eof_action")
#define ATOM_eof_code MK_ATOM("eof_code")
#define ATOM_equal MK_ATOM("equal")
#define ATOM_equals MK_ATOM("=")
#define ATOM_erase MK_ATOM("erase")
#define ATOM_erased MK_ATOM("erased")
#define ATOM_error MK_ATOM("error")
#define ATOM_eval MK_ATOM("eval")
#define ATOM_evaluable MK_ATOM("evaluable")
#define ATOM_evaluation_error MK_ATOM("evaluation_error")
#define ATOM_exception MK_ATOM("exception")
#define ATOM_exclusive MK_ATOM("exclusive")
#define ATOM_execute MK_ATOM("execute")
#define ATOM_exist MK_ATOM("exist")
#define ATOM_existence_error MK_ATOM("existence_error")
#define ATOM_exit MK_ATOM("exit")
#define ATOM_exited MK_ATOM("exited")
#define ATOM_exp MK_ATOM("exp")
#define ATOM_export MK_ATOM("export")
#define ATOM_exported MK_ATOM("exported")
#define ATOM_expression MK_ATOM("expression")
#define ATOM_externals MK_ATOM("externals")
#define ATOM_fact MK_ATOM("fact")
#define ATOM_factor MK_ATOM("factor")
#define ATOM_fail MK_ATOM("fail")
#define ATOM_failure_error MK_ATOM("failure_error")
#define ATOM_false MK_ATOM("false")
#define ATOM_feature MK_ATOM("feature")
#define ATOM_file MK_ATOM("file")
#define ATOM_file_name MK_ATOM("file_name")
#define ATOM_file_name_variables MK_ATOM("file_name_variables")
#define ATOM_file_no MK_ATOM("file_no")
#define ATOM_flag MK_ATOM("flag")
#define ATOM_flag_value MK_ATOM("flag_value")
#define ATOM_float MK_ATOM("float")
#define ATOM_float_format MK_ATOM("float_format")
#define ATOM_float_fractional_part MK_ATOM("float_fractional_part")
#define ATOM_float_integer_part MK_ATOM("float_integer_part")
#define ATOM_float_overflow MK_ATOM("float_overflow")
#define ATOM_float_underflow MK_ATOM("float_underflow")
#define ATOM_floor MK_ATOM("floor")
#define ATOM_force MK_ATOM("force")
#define ATOM_foreign MK_ATOM("foreign")
#define ATOM_foreign_function MK_ATOM("$foreign_function")
#define ATOM_foreign_return_value MK_ATOM("foreign_return_value")
#define ATOM_fork MK_ATOM("fork")
#define ATOM_frame MK_ATOM("frame")
#define ATOM_frame_attribute MK_ATOM("frame_attribute")
#define ATOM_frame_finished MK_ATOM("frame_finished")
#define ATOM_frame_reference MK_ATOM("frame_reference")
#define ATOM_free_of_attvar MK_ATOM("free_of_attvar")
#define ATOM_freeze MK_ATOM("freeze")
#define ATOM_full MK_ATOM("full")
#define ATOM_functor_name MK_ATOM("functor_name")
#define ATOM_functors MK_ATOM("functors")
#define ATOM_fx MK_ATOM("fx")
#define ATOM_fy MK_ATOM("fy")
#define ATOM_garbage_collected MK_ATOM("<garbage_collected>")
#define ATOM_garbage_collection MK_ATOM("garbage_collection")
#define ATOM_gc MK_ATOM("gc")
#define ATOM_gctime MK_ATOM("gctime")
#define ATOM_getcwd MK_ATOM("getcwd")
#define ATOM_global MK_ATOM("global")
#define ATOM_global_shifts MK_ATOM("global_shifts")
#define ATOM_global_stack MK_ATOM("global_stack")
#define ATOM_globallimit MK_ATOM("globallimit")
#define ATOM_globalused MK_ATOM("globalused")
#define ATOM_goal MK_ATOM("goal")
#define ATOM_goal_expansion MK_ATOM("goal_expansion")
#define ATOM_grammar MK_ATOM("-->")
#define ATOM_graph MK_ATOM("graph")
#define ATOM_gvar MK_ATOM("gvar")
#define ATOM_halt MK_ATOM("halt")
#define ATOM_has_alternatives MK_ATOM("has_alternatives")
#define ATOM_hash MK_ATOM("hash")
#define ATOM_hashed MK_ATOM("hashed")
#define ATOM_hat MK_ATOM("^")
#define ATOM_heap MK_ATOM("heap")
#define ATOM_heaplimit MK_ATOM("heaplimit")
#define ATOM_heapused MK_ATOM("heapused")
#define ATOM_help MK_ATOM("help")
#define ATOM_hidden MK_ATOM("hidden")
#define ATOM_hide_childs MK_ATOM("hide_childs")
#define ATOM_history_depth MK_ATOM("history_depth")
#define ATOM_ifthen MK_ATOM("->")
#define ATOM_ignore MK_ATOM("ignore")
#define ATOM_ignore_ops MK_ATOM("ignore_ops")
#define ATOM_imported MK_ATOM("imported")
#define ATOM_imported_procedure MK_ATOM("imported_procedure")
#define ATOM_index MK_ATOM("index")
#define ATOM_indexed MK_ATOM("indexed")
#define ATOM_inf MK_ATOM("inf")
#define ATOM_inferences MK_ATOM("inferences")
#define ATOM_infinite MK_ATOM("infinite")
#define ATOM_informational MK_ATOM("informational")
#define ATOM_init_file MK_ATOM("init_file")
#define ATOM_initialization MK_ATOM("initialization")
#define ATOM_input MK_ATOM("input")
#define ATOM_inserted_char MK_ATOM("inserted_char")
#define ATOM_instantiation_error MK_ATOM("instantiation_error")
#define ATOM_int MK_ATOM("int")
#define ATOM_int64_t MK_ATOM("int64_t")
#define ATOM_int_overflow MK_ATOM("int_overflow")
#define ATOM_integer MK_ATOM("integer")
#define ATOM_interrupt MK_ATOM("interrupt")
#define ATOM_io_error MK_ATOM("io_error")
#define ATOM_io_mode MK_ATOM("io_mode")
#define ATOM_ioctl MK_ATOM("ioctl")
#define ATOM_is MK_ATOM("is")
#define ATOM_iso MK_ATOM("iso")
#define ATOM_iso_latin_1 MK_ATOM("iso_latin_1")
#define ATOM_isovar MK_ATOM("$VAR")
#define ATOM_join MK_ATOM("join")
#define ATOM_jump MK_ATOM("jump")
#define ATOM_kernel MK_ATOM("kernel")
#define ATOM_key MK_ATOM("key")
#define ATOM_larger MK_ATOM(">")
#define ATOM_larger_equal MK_ATOM(">=")
#define ATOM_level MK_ATOM("level")
#define ATOM_li MK_ATOM("li")
#define ATOM_limit MK_ATOM("limit")
#define ATOM_line MK_ATOM("line")
#define ATOM_line_count MK_ATOM("line_count")
#define ATOM_list MK_ATOM("list")
#define ATOM_list_position MK_ATOM("list_position")
#define ATOM_listing MK_ATOM("listing")
#define ATOM_local MK_ATOM("local")
#define ATOM_local_shifts MK_ATOM("local_shifts")
#define ATOM_local_stack MK_ATOM("local_stack")
#define ATOM_locale MK_ATOM("locale")
#define ATOM_locallimit MK_ATOM("locallimit")
#define ATOM_localused MK_ATOM("localused")
#define ATOM_lock MK_ATOM("lock")
#define ATOM_locked MK_ATOM("locked")
#define ATOM_log MK_ATOM("log")
#define ATOM_log10 MK_ATOM("log10")
#define ATOM_long MK_ATOM("long")
#define ATOM_low MK_ATOM("low")
#define ATOM_lower MK_ATOM("lower")
#define ATOM_lsb MK_ATOM("lsb")
#define ATOM_lshift MK_ATOM("<<")
#define ATOM_main MK_ATOM("main")
#define ATOM_mark MK_ATOM("mark")
#define ATOM_matches MK_ATOM("matches")
#define ATOM_max MK_ATOM("max")
#define ATOM_max_arity MK_ATOM("max_arity")
#define ATOM_max_dde_handles MK_ATOM("max_dde_handles")
#define ATOM_max_depth MK_ATOM("max_depth")
#define ATOM_max_files MK_ATOM("max_files")
#define ATOM_max_path_length MK_ATOM("max_path_length")
#define ATOM_max_size MK_ATOM("max_size")
#define ATOM_max_variable_length MK_ATOM("max_variable_length")
#define ATOM_memory MK_ATOM("memory")
#define ATOM_message MK_ATOM("message")
#define ATOM_message_lines MK_ATOM("message_lines")
#define ATOM_message_queue MK_ATOM("message_queue")
#define ATOM_message_queue_property MK_ATOM("message_queue_property")
#define ATOM_meta_predicate MK_ATOM("meta_predicate")
#define ATOM_min MK_ATOM("min")
#define ATOM_min_free MK_ATOM("min_free")
#define ATOM_minus MK_ATOM("-")
#define ATOM_mismatched_char MK_ATOM("mismatched_char")
#define ATOM_mod MK_ATOM("mod")
#define ATOM_mode MK_ATOM("mode")
#define ATOM_modify MK_ATOM("modify")
#define ATOM_module MK_ATOM("module")
#define ATOM_module_property MK_ATOM("module_property")
#define ATOM_module_transparent MK_ATOM("module_transparent")
#define ATOM_modules MK_ATOM("modules")
#define ATOM_msb MK_ATOM("msb")
#define ATOM_multifile MK_ATOM("multifile")
#define ATOM_mutex MK_ATOM("mutex")
#define ATOM_mutex_option MK_ATOM("mutex_option")
#define ATOM_mutex_property MK_ATOM("mutex_property")
#define ATOM_natural MK_ATOM("natural")
#define ATOM_newline MK_ATOM("newline")
#define ATOM_nil MK_ATOM("[]")
#define ATOM_nlink MK_ATOM("nlink")
#define ATOM_no_memory MK_ATOM("no_memory")
#define ATOM_nodebug MK_ATOM("nodebug")
#define ATOM_non_empty_list MK_ATOM("non_empty_list")
#define ATOM_none MK_ATOM("none")
#define ATOM_noprofile MK_ATOM("noprofile")
#define ATOM_not MK_ATOM("not")
#define ATOM_not_equals MK_ATOM("\\=")
#define ATOM_not_implemented MK_ATOM("not_implemented")
#define ATOM_not_less_than_one MK_ATOM("not_less_than_one")
#define ATOM_not_less_than_zero MK_ATOM("not_less_than_zero")
#define ATOM_not_provable MK_ATOM("\\+")
#define ATOM_not_strickt_equals MK_ATOM("\\==")
#define ATOM_not_unique MK_ATOM("not_unique")
#define ATOM_number MK_ATOM("number")
#define ATOM_number_of_clauses MK_ATOM("number_of_clauses")
#define ATOM_numbervar_option MK_ATOM("numbervar_option")
#define ATOM_numbervars MK_ATOM("numbervars")
#define ATOM_occurs_check MK_ATOM("occurs_check")
#define ATOM_octet MK_ATOM("octet")
#define ATOM_off MK_ATOM("off")
#define ATOM_on MK_ATOM("on")
#define ATOM_open MK_ATOM("open")
#define ATOM_operator MK_ATOM("operator")
#define ATOM_operator_priority MK_ATOM("operator_priority")
#define ATOM_operator_specifier MK_ATOM("operator_specifier")
#define ATOM_optimise MK_ATOM("optimise")
#define ATOM_or MK_ATOM("\\/")
#define ATOM_order MK_ATOM("order")
#define ATOM_output MK_ATOM("output")
#define ATOM_pair MK_ATOM("pair")
#define ATOM_paren MK_ATOM("paren")
#define ATOM_parent MK_ATOM("parent")
#define ATOM_parent_goal MK_ATOM("parent_goal")
#define ATOM_past MK_ATOM("past")
#define ATOM_past_end_of_stream MK_ATOM("past_end_of_stream")
#define ATOM_pattern MK_ATOM("pattern")
#define ATOM_pc MK_ATOM("pc")
#define ATOM_period MK_ATOM("period")
#define ATOM_permission_error MK_ATOM("permission_error")
#define ATOM_pi MK_ATOM("pi")
#define ATOM_pipe MK_ATOM("pipe")
#define ATOM_plain MK_ATOM("plain")
#define ATOM_plus MK_ATOM("+")
#define ATOM_popcount MK_ATOM("popcount")
#define ATOM_portray MK_ATOM("portray")
#define ATOM_position MK_ATOM("position")
#define ATOM_posix MK_ATOM("posix")
#define ATOM_powm MK_ATOM("powm")
#define ATOM_predicate_indicator MK_ATOM("predicate_indicator")
#define ATOM_predicates MK_ATOM("predicates")
#define ATOM_print MK_ATOM("print")
#define ATOM_print_message MK_ATOM("print_message")
#define ATOM_priority MK_ATOM("priority")
#define ATOM_private_procedure MK_ATOM("private_procedure")
#define ATOM_procedure MK_ATOM("procedure")
#define ATOM_profile_mode MK_ATOM("profile_mode")
#define ATOM_profile_no_cpu_time MK_ATOM("profile_no_cpu_time")
#define ATOM_profile_node MK_ATOM("profile_node")
#define ATOM_program MK_ATOM("program")
#define ATOM_program_counter MK_ATOM("program_counter")
#define ATOM_prolog MK_ATOM("prolog")
#define ATOM_prompt MK_ATOM("|:")
#define ATOM_property MK_ATOM("property")
#define ATOM_protocol MK_ATOM("protocol")
#define ATOM_prove MK_ATOM(":-")
#define ATOM_punct MK_ATOM("punct")
#define ATOM_query MK_ATOM("?-")
#define ATOM_queue_option MK_ATOM("queue_option")
#define ATOM_quiet MK_ATOM("quiet")
#define ATOM_quote MK_ATOM("quote")
#define ATOM_quoted MK_ATOM("quoted")
#define ATOM_radix MK_ATOM("radix")
#define ATOM_random MK_ATOM("random")
#define ATOM_rational MK_ATOM("rational")
#define ATOM_rationalize MK_ATOM("rationalize")
#define ATOM_rdiv MK_ATOM("rdiv")
#define ATOM_read MK_ATOM("read")
#define ATOM_read_option MK_ATOM("read_option")
#define ATOM_readline MK_ATOM("readline")
#define ATOM_real_time MK_ATOM("real_time")
#define ATOM_receiver MK_ATOM("receiver")
#define ATOM_record MK_ATOM("record")
#define ATOM_record_position MK_ATOM("record_position")
#define ATOM_redefine MK_ATOM("redefine")
#define ATOM_redo MK_ATOM("redo")
#define ATOM_references MK_ATOM("references")
#define ATOM_rem MK_ATOM("rem")
#define ATOM_rename MK_ATOM("rename")
#define ATOM_report_error MK_ATOM("report_error")
#define ATOM_reposition MK_ATOM("reposition")
#define ATOM_representation_error MK_ATOM("representation_error")
#define ATOM_representation_errors MK_ATOM("representation_errors")
#define ATOM_reset MK_ATOM("reset")
#define ATOM_resource_error MK_ATOM("resource_error")
#define ATOM_resource_handle MK_ATOM("resource_handle")
#define ATOM_retry MK_ATOM("retry")
#define ATOM_round MK_ATOM("round")
#define ATOM_rshift MK_ATOM(">>")
#define ATOM_running MK_ATOM("running")
#define ATOM_runtime MK_ATOM("runtime")
#define ATOM_save_class MK_ATOM("save_class")
#define ATOM_save_option MK_ATOM("save_option")
#define ATOM_seek_method MK_ATOM("seek_method")
#define ATOM_select MK_ATOM("select")
#define ATOM_semicolon MK_ATOM(";")
#define ATOM_separated MK_ATOM("separated")
#define ATOM_setup_and_call_cleanup MK_ATOM("setup_and_call_cleanup")
#define ATOM_shared MK_ATOM("shared")
#define ATOM_shared_object MK_ATOM("shared_object")
#define ATOM_shared_object_handle MK_ATOM("shared_object_handle")
#define ATOM_shell MK_ATOM("shell")
#define ATOM_sign MK_ATOM("sign")
#define ATOM_signal MK_ATOM("signal")
#define ATOM_signal_handler MK_ATOM("signal_handler")
#define ATOM_silent MK_ATOM("silent")
#define ATOM_sin MK_ATOM("sin")
#define ATOM_singletons MK_ATOM("singletons")
#define ATOM_size MK_ATOM("size")
#define ATOM_skip MK_ATOM("skip")
#define ATOM_smaller MK_ATOM("<")
#define ATOM_smaller_equal MK_ATOM("=<")
#define ATOM_softcut MK_ATOM("*->")
#define ATOM_source_sink MK_ATOM("source_sink")
#define ATOM_space MK_ATOM("space")
#define ATOM_spy MK_ATOM("spy")
#define ATOM_sqrt MK_ATOM("sqrt")
#define ATOM_stack MK_ATOM("stack")
#define ATOM_stack_parameter MK_ATOM("stack_parameter")
#define ATOM_stack_shifts MK_ATOM("stack_shifts")
#define ATOM_stacks MK_ATOM("stacks")
#define ATOM_stand_alone MK_ATOM("stand_alone")
#define ATOM_star MK_ATOM("*")
#define ATOM_start MK_ATOM("start")
#define ATOM_stat MK_ATOM("stat")
#define ATOM_static_procedure MK_ATOM("static_procedure")
#define ATOM_statistics MK_ATOM("statistics")
#define ATOM_status MK_ATOM("status")
#define ATOM_stderr MK_ATOM("stderr")
#define ATOM_stream MK_ATOM("stream")
#define ATOM_stream_option MK_ATOM("stream_option")
#define ATOM_stream_or_alias MK_ATOM("stream_or_alias")
#define ATOM_stream_position MK_ATOM("$stream_position")
#define ATOM_stream_property MK_ATOM("stream_property")
#define ATOM_strict_equal MK_ATOM("==")
#define ATOM_string MK_ATOM("string")
#define ATOM_string_position MK_ATOM("string_position")
#define ATOM_subterm_positions MK_ATOM("subterm_positions")
#define ATOM_suffix MK_ATOM("suffix")
#define ATOM_syntax_error MK_ATOM("syntax_error")
#define ATOM_syntax_errors MK_ATOM("syntax_errors")
#define ATOM_system MK_ATOM("system")
#define ATOM_system_error MK_ATOM("system_error")
#define ATOM_system_init_file MK_ATOM("system_init_file")
#define ATOM_system_thread_id MK_ATOM("system_thread_id")
#define ATOM_system_time MK_ATOM("system_time")
#define ATOM_tan MK_ATOM("tan")
#define ATOM_term MK_ATOM("term")
#define ATOM_term_expansion MK_ATOM("term_expansion")
#define ATOM_term_position MK_ATOM("term_position")
#define ATOM_terminal MK_ATOM("terminal")
#define ATOM_terminal_capability MK_ATOM("terminal_capability")
#define ATOM_temporary_files MK_ATOM("temporary_files")
#define ATOM_text MK_ATOM("text")
#define ATOM_thread MK_ATOM("thread")
#define ATOM_thread_cputime MK_ATOM("thread_cputime")
#define ATOM_thread_initialization MK_ATOM("thread_initialization")
#define ATOM_thread_local MK_ATOM("thread_local")
#define ATOM_thread_local_procedure MK_ATOM("thread_local_procedure")
#define ATOM_thread_option MK_ATOM("thread_option")
#define ATOM_thread_property MK_ATOM("thread_property")
#define ATOM_threads MK_ATOM("threads")
#define ATOM_threads_created MK_ATOM("threads_created")
#define ATOM_throw MK_ATOM("throw")
#define ATOM_tilde MK_ATOM("~")
#define ATOM_time MK_ATOM("time")
#define ATOM_time_stamp MK_ATOM("time_stamp")
#define ATOM_timeout MK_ATOM("timeout")
#define ATOM_timeout_error MK_ATOM("timeout_error")
#define ATOM_timezone MK_ATOM("timezone")
#define ATOM_to_lower MK_ATOM("to_lower")
#define ATOM_to_upper MK_ATOM("to_upper")
#define ATOM_top MK_ATOM("top")
#define ATOM_top_level MK_ATOM("top_level")
#define ATOM_toplevel MK_ATOM("toplevel")
#define ATOM_trace MK_ATOM("trace")
#define ATOM_trace_any MK_ATOM("trace_any")
#define ATOM_trace_call MK_ATOM("trace_call")
#define ATOM_trace_exit MK_ATOM("trace_exit")
#define ATOM_trace_fail MK_ATOM("trace_fail")
#define ATOM_trace_gc MK_ATOM("trace_gc")
#define ATOM_trace_redo MK_ATOM("trace_redo")
#define ATOM_traceinterc MK_ATOM("prolog_trace_interception")
#define ATOM_tracing MK_ATOM("tracing")
#define ATOM_trail MK_ATOM("trail")
#define ATOM_trail_shifts MK_ATOM("trail_shifts")
#define ATOM_traillimit MK_ATOM("traillimit")
#define ATOM_trailused MK_ATOM("trailused")
#define ATOM_transparent MK_ATOM("transparent")
#define ATOM_transposed_char MK_ATOM("transposed_char")
#define ATOM_transposed_word MK_ATOM("transposed_word")
#define ATOM_true MK_ATOM("true")
#define ATOM_truncate MK_ATOM("truncate")
#define ATOM_tty MK_ATOM("tty")
#define ATOM_tty_control MK_ATOM("tty_control")
#define ATOM_type MK_ATOM("type")
#define ATOM_type_error MK_ATOM("type_error")
#define ATOM_undefined MK_ATOM("undefined")
#define ATOM_undefined_global_variable MK_ATOM("undefined_global_variable")
#define ATOM_undefinterc MK_ATOM("$undefined_procedure")
#define ATOM_unicode_be MK_ATOM("unicode_be")
#define ATOM_unicode_le MK_ATOM("unicode_le")
#define ATOM_unify MK_ATOM("unify")
#define ATOM_unique MK_ATOM("unique")
#define ATOM_univ MK_ATOM("=..")
#define ATOM_unknown MK_ATOM("unknown")
#define ATOM_unlimited MK_ATOM("unlimited")
#define ATOM_unlock MK_ATOM("unlock")
#define ATOM_unlocked MK_ATOM("unlocked")
#define ATOM_update MK_ATOM("update")
#define ATOM_upper MK_ATOM("upper")
#define ATOM_user MK_ATOM("user")
#define ATOM_user_error MK_ATOM("user_error")
#define ATOM_user_input MK_ATOM("user_input")
#define ATOM_user_output MK_ATOM("user_output")
#define ATOM_utc MK_ATOM("UTC")
#define ATOM_utf8 MK_ATOM("utf8")
#define ATOM_v MK_ATOM("v")
#define ATOM_var MK_ATOM("$VAR$")
#define ATOM_variable MK_ATOM("variable")
#define ATOM_variable_names MK_ATOM("variable_names")
#define ATOM_variables MK_ATOM("variables")
#define ATOM_very_deep MK_ATOM("very_deep")
#define ATOM_vmi MK_ATOM("vmi")
#define ATOM_volatile MK_ATOM("volatile")
#define ATOM_wakeup MK_ATOM("wakeup")
#define ATOM_warning MK_ATOM("warning")
#define ATOM_wchar_t MK_ATOM("wchar_t")
#define ATOM_white MK_ATOM("white")
#define ATOM_write MK_ATOM("write")
#define ATOM_write_attributes MK_ATOM("write_attributes")
#define ATOM_write_option MK_ATOM("write_option")
#define ATOM_xdigit MK_ATOM("xdigit")
#define ATOM_xf MK_ATOM("xf")
#define ATOM_xfx MK_ATOM("xfx")
#define ATOM_xfy MK_ATOM("xfy")
#define ATOM_xml MK_ATOM("xml")
#define ATOM_xor MK_ATOM("xor")
#define ATOM_xpceref MK_ATOM("@")
#define ATOM_yf MK_ATOM("yf")
#define ATOM_yfx MK_ATOM("yfx")
#define ATOM_yfy MK_ATOM("yfy")
#define ATOM_zero_divisor MK_ATOM("zero_divisor")


#define FUNCTOR_abs1 MKFUNCTOR(ATOM_abs,1)
#define FUNCTOR_access1 MKFUNCTOR(ATOM_access,1)
#define FUNCTOR_acos1 MKFUNCTOR(ATOM_acos,1)
#define FUNCTOR_alias1 MKFUNCTOR(ATOM_alias,1)
#define FUNCTOR_and2 MKFUNCTOR(ATOM_and,2)
#define FUNCTOR_ar_equals2 MKFUNCTOR(ATOM_ar_equals,2)
#define FUNCTOR_ar_not_equal2 MKFUNCTOR(ATOM_ar_not_equal,2)
#define FUNCTOR_asin1 MKFUNCTOR(ATOM_asin,1)
#define FUNCTOR_assert1 MKFUNCTOR(ATOM_assert,1)
#define FUNCTOR_asserta1 MKFUNCTOR(ATOM_asserta,1)
#define FUNCTOR_atan1 MKFUNCTOR(ATOM_atan,1)
#define FUNCTOR_atan2 MKFUNCTOR(ATOM_atan,2)
#define FUNCTOR_atom1 MKFUNCTOR(ATOM_atom,1)
#define FUNCTOR_att3 MKFUNCTOR(ATOM_att,3)
#define FUNCTOR_backslash1 MKFUNCTOR(ATOM_backslash,1)
#define FUNCTOR_bar2 MKFUNCTOR(ATOM_bar,2)
#define FUNCTOR_block3 MKFUNCTOR(ATOM_block,3)
#define FUNCTOR_bom1 MKFUNCTOR(ATOM_bom,1)
#define FUNCTOR_brace_term_position3 MKFUNCTOR(ATOM_brace_term_position,3)
#define FUNCTOR_break1 MKFUNCTOR(ATOM_break,1)
#define FUNCTOR_break3 MKFUNCTOR(ATOM_break,3)
#define FUNCTOR_buffer1 MKFUNCTOR(ATOM_buffer,1)
#define FUNCTOR_buffer_size1 MKFUNCTOR(ATOM_buffer_size,1)
#define FUNCTOR_busy2 MKFUNCTOR(ATOM_busy,2)
#define FUNCTOR_call1 MKFUNCTOR(ATOM_call,1)
#define FUNCTOR_callpred2 MKFUNCTOR(ATOM_callpred,2)
#define FUNCTOR_catch3 MKFUNCTOR(ATOM_catch,3)
#define FUNCTOR_ceil1 MKFUNCTOR(ATOM_ceil,1)
#define FUNCTOR_ceiling1 MKFUNCTOR(ATOM_ceiling,1)
#define FUNCTOR_chars1 MKFUNCTOR(ATOM_chars,1)
#define FUNCTOR_chars2 MKFUNCTOR(ATOM_chars,2)
#define FUNCTOR_clause1 MKFUNCTOR(ATOM_clause,1)
#define FUNCTOR_close_on_abort1 MKFUNCTOR(ATOM_close_on_abort,1)
#define FUNCTOR_codes1 MKFUNCTOR(ATOM_codes,1)
#define FUNCTOR_codes2 MKFUNCTOR(ATOM_codes,2)
#define FUNCTOR_colon2 MKFUNCTOR(ATOM_colon,2)
#define FUNCTOR_comma2 MKFUNCTOR(ATOM_comma,2)
#define FUNCTOR_context2 MKFUNCTOR(ATOM_context,2)
#define FUNCTOR_cos1 MKFUNCTOR(ATOM_cos,1)
#define FUNCTOR_cputime0 MKFUNCTOR(ATOM_cputime,0)
#define FUNCTOR_curl1 MKFUNCTOR(ATOM_curl,1)
#define FUNCTOR_cut_call1 MKFUNCTOR(ATOM_cut_call,1)
#define FUNCTOR_cut_exit1 MKFUNCTOR(ATOM_cut_exit,1)
#define FUNCTOR_date9 MKFUNCTOR(ATOM_date,9)
#define FUNCTOR_dcall1 MKFUNCTOR(ATOM_dcall,1)
#define FUNCTOR_dcut1 MKFUNCTOR(ATOM_dcut,1)
#define FUNCTOR_dde_error2 MKFUNCTOR(ATOM_dde_error,2)
#define FUNCTOR_debugging1 MKFUNCTOR(ATOM_debugging,1)
#define FUNCTOR_detached1 MKFUNCTOR(ATOM_detached,1)
#define FUNCTOR_dexit2 MKFUNCTOR(ATOM_dexit,2)
#define FUNCTOR_dforeign_registered2 MKFUNCTOR(ATOM_dforeign_registered,2)
#define FUNCTOR_dgarbage_collect1 MKFUNCTOR(ATOM_dgarbage_collect,1)
#define FUNCTOR_div2 MKFUNCTOR(ATOM_div,2)
#define FUNCTOR_divide2 MKFUNCTOR(ATOM_divide,2)
#define FUNCTOR_dmessage_queue1 MKFUNCTOR(ATOM_dmessage_queue,1)
#define FUNCTOR_dmutex1 MKFUNCTOR(ATOM_dmutex,1)
#define FUNCTOR_domain_error2 MKFUNCTOR(ATOM_domain_error,2)
#define FUNCTOR_dot2 MKFUNCTOR(ATOM_dot,2)
#define FUNCTOR_doublestar2 MKFUNCTOR(ATOM_doublestar,2)
#define FUNCTOR_dprof_node1 MKFUNCTOR(ATOM_dprof_node,1)
#define FUNCTOR_dstream1 MKFUNCTOR(ATOM_dstream,1)
#define FUNCTOR_dthread_init0 MKFUNCTOR(ATOM_dthread_init,0)
#define FUNCTOR_dthrow1 MKFUNCTOR(ATOM_dthrow,1)
#define FUNCTOR_dtime2 MKFUNCTOR(ATOM_dtime,2)
#define FUNCTOR_dwakeup1 MKFUNCTOR(ATOM_dwakeup,1)
#define FUNCTOR_e0 MKFUNCTOR(ATOM_e,0)
#define FUNCTOR_encoding1 MKFUNCTOR(ATOM_encoding,1)
#define FUNCTOR_end_of_stream1 MKFUNCTOR(ATOM_end_of_stream,1)
#define FUNCTOR_eof_action1 MKFUNCTOR(ATOM_eof_action,1)
#define FUNCTOR_equals2 MKFUNCTOR(ATOM_equals,2)
#define FUNCTOR_erased1 MKFUNCTOR(ATOM_erased,1)
#define FUNCTOR_error2 MKFUNCTOR(ATOM_error,2)
#define FUNCTOR_eval1 MKFUNCTOR(ATOM_eval,1)
#define FUNCTOR_evaluation_error1 MKFUNCTOR(ATOM_evaluation_error,1)
#define FUNCTOR_exception1 MKFUNCTOR(ATOM_exception,1)
#define FUNCTOR_exception3 MKFUNCTOR(ATOM_exception,3)
#define FUNCTOR_existence_error2 MKFUNCTOR(ATOM_existence_error,2)
#define FUNCTOR_exited1 MKFUNCTOR(ATOM_exited,1)
#define FUNCTOR_exp1 MKFUNCTOR(ATOM_exp,1)
#define FUNCTOR_fail0 MKFUNCTOR(ATOM_fail,0)
#define FUNCTOR_failure_error1 MKFUNCTOR(ATOM_failure_error,1)
#define FUNCTOR_file1 MKFUNCTOR(ATOM_file,1)
#define FUNCTOR_file4 MKFUNCTOR(ATOM_file,4)
#define FUNCTOR_file_name1 MKFUNCTOR(ATOM_file_name,1)
#define FUNCTOR_file_no1 MKFUNCTOR(ATOM_file_no,1)
#define FUNCTOR_float1 MKFUNCTOR(ATOM_float,1)
#define FUNCTOR_float_fractional_part1 MKFUNCTOR(ATOM_float_fractional_part,1)
#define FUNCTOR_float_integer_part1 MKFUNCTOR(ATOM_float_integer_part,1)
#define FUNCTOR_floor1 MKFUNCTOR(ATOM_floor,1)
#define FUNCTOR_foreign_function1 MKFUNCTOR(ATOM_foreign_function,1)
#define FUNCTOR_frame3 MKFUNCTOR(ATOM_frame,3)
#define FUNCTOR_frame_finished1 MKFUNCTOR(ATOM_frame_finished,1)
#define FUNCTOR_goal_expansion2 MKFUNCTOR(ATOM_goal_expansion,2)
#define FUNCTOR_hat2 MKFUNCTOR(ATOM_hat,2)
#define FUNCTOR_ifthen2 MKFUNCTOR(ATOM_ifthen,2)
#define FUNCTOR_input0 MKFUNCTOR(ATOM_input,0)
#define FUNCTOR_integer1 MKFUNCTOR(ATOM_integer,1)
#define FUNCTOR_interrupt1 MKFUNCTOR(ATOM_interrupt,1)
#define FUNCTOR_io_error2 MKFUNCTOR(ATOM_io_error,2)
#define FUNCTOR_is2 MKFUNCTOR(ATOM_is,2)
#define FUNCTOR_isovar1 MKFUNCTOR(ATOM_isovar,1)
#define FUNCTOR_larger2 MKFUNCTOR(ATOM_larger,2)
#define FUNCTOR_larger_equal2 MKFUNCTOR(ATOM_larger_equal,2)
#define FUNCTOR_line_count1 MKFUNCTOR(ATOM_line_count,1)
#define FUNCTOR_list_position4 MKFUNCTOR(ATOM_list_position,4)
#define FUNCTOR_listing1 MKFUNCTOR(ATOM_listing,1)
#define FUNCTOR_locked2 MKFUNCTOR(ATOM_locked,2)
#define FUNCTOR_log1 MKFUNCTOR(ATOM_log,1)
#define FUNCTOR_log101 MKFUNCTOR(ATOM_log10,1)
#define FUNCTOR_lsb1 MKFUNCTOR(ATOM_lsb,1)
#define FUNCTOR_lshift2 MKFUNCTOR(ATOM_lshift,2)
#define FUNCTOR_max2 MKFUNCTOR(ATOM_max,2)
#define FUNCTOR_max_size1 MKFUNCTOR(ATOM_max_size,1)
#define FUNCTOR_message_lines1 MKFUNCTOR(ATOM_message_lines,1)
#define FUNCTOR_min2 MKFUNCTOR(ATOM_min,2)
#define FUNCTOR_minus1 MKFUNCTOR(ATOM_minus,1)
#define FUNCTOR_minus2 MKFUNCTOR(ATOM_minus,2)
#define FUNCTOR_mod2 MKFUNCTOR(ATOM_mod,2)
#define FUNCTOR_mode1 MKFUNCTOR(ATOM_mode,1)
#define FUNCTOR_msb1 MKFUNCTOR(ATOM_msb,1)
#define FUNCTOR_newline1 MKFUNCTOR(ATOM_newline,1)
#define FUNCTOR_nlink1 MKFUNCTOR(ATOM_nlink,1)
#define FUNCTOR_not_implemented2 MKFUNCTOR(ATOM_not_implemented,2)
#define FUNCTOR_not_provable1 MKFUNCTOR(ATOM_not_provable,1)
#define FUNCTOR_occurs_check2 MKFUNCTOR(ATOM_occurs_check,2)
#define FUNCTOR_or2 MKFUNCTOR(ATOM_or,2)
#define FUNCTOR_output0 MKFUNCTOR(ATOM_output,0)
#define FUNCTOR_permission_error3 MKFUNCTOR(ATOM_permission_error,3)
#define FUNCTOR_pi0 MKFUNCTOR(ATOM_pi,0)
#define FUNCTOR_pipe1 MKFUNCTOR(ATOM_pipe,1)
#define FUNCTOR_plus1 MKFUNCTOR(ATOM_plus,1)
#define FUNCTOR_plus2 MKFUNCTOR(ATOM_plus,2)
#define FUNCTOR_popcount1 MKFUNCTOR(ATOM_popcount,1)
#define FUNCTOR_portray1 MKFUNCTOR(ATOM_portray,1)
#define FUNCTOR_position1 MKFUNCTOR(ATOM_position,1)
#define FUNCTOR_powm3 MKFUNCTOR(ATOM_powm,3)
#define FUNCTOR_print1 MKFUNCTOR(ATOM_print,1)
#define FUNCTOR_print_message2 MKFUNCTOR(ATOM_print_message,2)
#define FUNCTOR_procedure2 MKFUNCTOR(ATOM_procedure,2)
#define FUNCTOR_prove1 MKFUNCTOR(ATOM_prove,1)
#define FUNCTOR_prove2 MKFUNCTOR(ATOM_prove,2)
#define FUNCTOR_punct2 MKFUNCTOR(ATOM_punct,2)
#define FUNCTOR_random1 MKFUNCTOR(ATOM_random,1)
#define FUNCTOR_rational1 MKFUNCTOR(ATOM_rational,1)
#define FUNCTOR_rationalize1 MKFUNCTOR(ATOM_rationalize,1)
#define FUNCTOR_rdiv2 MKFUNCTOR(ATOM_rdiv,2)
#define FUNCTOR_rem2 MKFUNCTOR(ATOM_rem,2)
#define FUNCTOR_reposition1 MKFUNCTOR(ATOM_reposition,1)
#define FUNCTOR_representation_error1 MKFUNCTOR(ATOM_representation_error,1)
#define FUNCTOR_representation_errors1 MKFUNCTOR(ATOM_representation_errors,1)
#define FUNCTOR_resource_error1 MKFUNCTOR(ATOM_resource_error,1)
#define FUNCTOR_retry1 MKFUNCTOR(ATOM_retry,1)
#define FUNCTOR_round1 MKFUNCTOR(ATOM_round,1)
#define FUNCTOR_rshift2 MKFUNCTOR(ATOM_rshift,2)
#define FUNCTOR_semicolon2 MKFUNCTOR(ATOM_semicolon,2)
#define FUNCTOR_setup_and_call_cleanup4 MKFUNCTOR(ATOM_setup_and_call_cleanup,4)
#define FUNCTOR_shared_object2 MKFUNCTOR(ATOM_shared_object,2)
#define FUNCTOR_shell2 MKFUNCTOR(ATOM_shell,2)
#define FUNCTOR_sign1 MKFUNCTOR(ATOM_sign,1)
#define FUNCTOR_signal1 MKFUNCTOR(ATOM_signal,1)
#define FUNCTOR_signal2 MKFUNCTOR(ATOM_signal,2)
#define FUNCTOR_sin1 MKFUNCTOR(ATOM_sin,1)
#define FUNCTOR_singletons1 MKFUNCTOR(ATOM_singletons,1)
#define FUNCTOR_size1 MKFUNCTOR(ATOM_size,1)
#define FUNCTOR_smaller2 MKFUNCTOR(ATOM_smaller,2)
#define FUNCTOR_smaller_equal2 MKFUNCTOR(ATOM_smaller_equal,2)
#define FUNCTOR_softcut2 MKFUNCTOR(ATOM_softcut,2)
#define FUNCTOR_spy1 MKFUNCTOR(ATOM_spy,1)
#define FUNCTOR_sqrt1 MKFUNCTOR(ATOM_sqrt,1)
#define FUNCTOR_star2 MKFUNCTOR(ATOM_star,2)
#define FUNCTOR_status1 MKFUNCTOR(ATOM_status,1)
#define FUNCTOR_stream4 MKFUNCTOR(ATOM_stream,4)
#define FUNCTOR_stream_position4 MKFUNCTOR(ATOM_stream_position,4)
#define FUNCTOR_string1 MKFUNCTOR(ATOM_string,1)
#define FUNCTOR_string2 MKFUNCTOR(ATOM_string,2)
#define FUNCTOR_string_position2 MKFUNCTOR(ATOM_string_position,2)
#define FUNCTOR_syntax_error1 MKFUNCTOR(ATOM_syntax_error,1)
#define FUNCTOR_syntax_error3 MKFUNCTOR(ATOM_syntax_error,3)
#define FUNCTOR_tan1 MKFUNCTOR(ATOM_tan,1)
#define FUNCTOR_term_expansion2 MKFUNCTOR(ATOM_term_expansion,2)
#define FUNCTOR_term_position5 MKFUNCTOR(ATOM_term_position,5)
#define FUNCTOR_timeout1 MKFUNCTOR(ATOM_timeout,1)
#define FUNCTOR_timeout_error2 MKFUNCTOR(ATOM_timeout_error,2)
#define FUNCTOR_trace1 MKFUNCTOR(ATOM_trace,1)
#define FUNCTOR_traceinterc3 MKFUNCTOR(ATOM_traceinterc,3)
#define FUNCTOR_tracing1 MKFUNCTOR(ATOM_tracing,1)
#define FUNCTOR_true0 MKFUNCTOR(ATOM_true,0)
#define FUNCTOR_truncate1 MKFUNCTOR(ATOM_truncate,1)
#define FUNCTOR_tty1 MKFUNCTOR(ATOM_tty,1)
#define FUNCTOR_type1 MKFUNCTOR(ATOM_type,1)
#define FUNCTOR_type_error2 MKFUNCTOR(ATOM_type_error,2)
#define FUNCTOR_undefinterc4 MKFUNCTOR(ATOM_undefinterc,4)
#define FUNCTOR_var1 MKFUNCTOR(ATOM_var,1)
#define FUNCTOR_wakeup3 MKFUNCTOR(ATOM_wakeup,3)
#define FUNCTOR_warning3 MKFUNCTOR(ATOM_warning,3)
#define FUNCTOR_xor2 MKFUNCTOR(ATOM_xor,2)
#define FUNCTOR_xpceref1 MKFUNCTOR(ATOM_xpceref,1)
#define FUNCTOR_dc_call_prolog0 MKFUNCTOR(ATOM_dc_call_prolog,0)
#define FUNCTOR_strict_equal2 MKFUNCTOR(ATOM_strict_equal,2)
