  Atom3Dots = Yap_LookupAtom("...");
  AtomAbol = Yap_FullLookupAtom("$abol");
  AtomAccess = Yap_LookupAtom("access");
  AtomAfInet = Yap_LookupAtom("AF_INET");
  AtomAfLocal = Yap_LookupAtom("AF_LOCAL");
  AtomAfUnix = Yap_LookupAtom("AF_UNIX");
  AtomAlarm = Yap_FullLookupAtom("$alarm");
  AtomAlias = Yap_LookupAtom("alias");
  AtomAltNot = Yap_LookupAtom("not");
  AtomAppend = Yap_LookupAtom("append");
  AtomArg = Yap_LookupAtom("arg");
  AtomArray = Yap_FullLookupAtom("$array");
  AtomArrayAccess = Yap_FullLookupAtom("$array_arg");
  AtomArrayOverflow = Yap_LookupAtom("array_overflow");
  AtomArrayType = Yap_LookupAtom("array_type");
  AtomArrow = Yap_LookupAtom("->");
  AtomAssert = Yap_LookupAtom(":-");
  AtomAt = Yap_LookupAtom("at");
  AtomAtom = Yap_LookupAtom("atom");
  AtomAtomic = Yap_LookupAtom("atomic");
  AtomAtt = Yap_FullLookupAtom("$att");
  AtomAtt1 = Yap_LookupAtom("att");
  AtomAttDo = Yap_FullLookupAtom("$att_do");
  AtomAttributes = Yap_LookupAtom("attributes");
  AtomB = Yap_FullLookupAtom("$last_choice_pt");
  AtomBatched = Yap_LookupAtom("batched");
  AtomBetween = Yap_LookupAtom("between");
  AtomHugeInt = Yap_LookupAtom("huge_int");
  AtomBinaryStream = Yap_LookupAtom("binary_stream");
  AtomBraces = Yap_LookupAtom("{}");
  AtomBreak = Yap_FullLookupAtom("$break");
  AtomByte = Yap_LookupAtom("byte");
  AtomCArith = Yap_FullLookupAtom("$c_arith");
  AtomCall = Yap_LookupAtom("call");
  AtomCallAndRetryCounter = Yap_LookupAtom("call_and_retry_counter");
  AtomCallCounter = Yap_LookupAtom("call_counter");
  AtomCallable = Yap_LookupAtom("callable");
  AtomCatch = Yap_FullLookupAtom("$catch");
  AtomChangeModule = Yap_FullLookupAtom("$change_module");
  AtomChar = Yap_LookupAtom("char");
  AtomCharsio = Yap_LookupAtom("charsio");
  AtomCharacter = Yap_LookupAtom("character");
  AtomCharacterCode = Yap_LookupAtom("character_code");
  AtomCleanCall = Yap_FullLookupAtom("$clean_call");
  AtomColomn = Yap_LookupAtom(":");
  AtomCodeSpace = Yap_LookupAtom("code_space");
  AtomComma = Yap_LookupAtom(",");
  AtomCompound = Yap_LookupAtom("compound");
  AtomConsistencyError = Yap_LookupAtom("consistency_error");
  AtomConsultOnBoot = Yap_FullLookupAtom("$consult_on_boot");
  AtomContext = Yap_LookupAtom("context");
  AtomCputime = Yap_LookupAtom("cputime");
  AtomCreate = Yap_LookupAtom("create");
  AtomCreep = Yap_FullLookupAtom("$creep");
  AtomCryptAtoms = Yap_LookupAtom("crypt_atoms");
  AtomCsult = Yap_FullLookupAtom("$csult");
  AtomCurrentModule = Yap_FullLookupAtom("$current_module");
  AtomCut = Yap_LookupAtom("!");
  AtomCutBy = Yap_FullLookupAtom("$cut_by");
  AtomDAbort = Yap_FullLookupAtom("$abort");
  AtomDBReference = Yap_LookupAtom("db_reference");
  AtomDBTerm = Yap_LookupAtom("db_term");
  AtomDBref = Yap_FullLookupAtom("$dbref");
  AtomDInteger = Yap_FullLookupAtom("$integer");
  AtomDec10 = Yap_LookupAtom("dec10");
  AtomDefault = Yap_LookupAtom("default");
  AtomDevNull = Yap_LookupAtom("/dev/null");
  AtomDiff = Yap_LookupAtom("\\=");
  AtomDoLogUpdClause = Yap_FullLookupAtom("$do_log_upd_clause");
  AtomDoLogUpdClause0 = Yap_FullLookupAtom("$do_log_upd_clause0");
  AtomDoLogUpdClauseErase = Yap_FullLookupAtom("$do_log_upd_clause_erase");
  AtomDoStaticClause = Yap_FullLookupAtom("$do_static_clause");
  AtomDollarU = Yap_FullLookupAtom("$u");
  AtomDollarUndef = Yap_FullLookupAtom("$undef");
  AtomDomainError = Yap_LookupAtom("domain_error");
  AtomE = Yap_LookupAtom("e");
  AtomEOFBeforeEOT = Yap_LookupAtom("end_of_file_found_before_end_of_term");
  AtomEQ = Yap_LookupAtom("=");
  AtomEmptyAtom = Yap_LookupAtom("");
  AtomEndOfStream = Yap_LookupAtom("$end_of_stream");
  AtomEof = Yap_LookupAtom("end_of_file");
  AtomEq = Yap_LookupAtom("=");
  AtomError = Yap_LookupAtom("error");
  AtomEvaluable = Yap_LookupAtom("evaluable");
  AtomEvaluationError = Yap_LookupAtom("evaluation_error");
  AtomExecAnswers = Yap_LookupAtom("exec_answers");
  AtomExecuteInMod = Yap_FullLookupAtom("$execute_in_mod");
  AtomExecuteWithin = Yap_FullLookupAtom("$execute_within");
  AtomExecuteWoMod = Yap_FullLookupAtom("$execute_wo_mod");
  AtomExistenceError = Yap_LookupAtom("existence_error");
  AtomExpectedNumber = Yap_LookupAtom("expected_number_syntax");
  AtomExtendFileSearchPath = Yap_FullLookupAtom("$extend_file_search_path");
  AtomFB = Yap_LookupAtom("fb");
  AtomFail = Yap_LookupAtom("fail");
  AtomFalse = Yap_LookupAtom("false");
  AtomFast = Yap_FullLookupAtom("$fast");
  AtomFileerrors = Yap_LookupAtom("fileerrors");
  AtomFloat = Yap_LookupAtom("float");
  AtomFloatFormat = Yap_LookupAtom("\%.15g");
  AtomFloatOverflow = Yap_LookupAtom("float_overflow");
  AtomFloatUnderflow = Yap_LookupAtom("float_underflow");
  AtomFormat = Yap_LookupAtom("format");
  AtomFormatAt = Yap_FullLookupAtom("$format@");
  AtomFunctor = Yap_LookupAtom("functor");
  AtomGT = Yap_LookupAtom(">");
  AtomGVar = Yap_LookupAtom("var");
  AtomGc = Yap_FullLookupAtom("$gc");
  AtomGcMargin = Yap_FullLookupAtom("$gc_margin");
  AtomGcTrace = Yap_FullLookupAtom("$gc_trace");
  AtomGcVerbose = Yap_FullLookupAtom("$gc_verbose");
  AtomGcVeryVerbose = Yap_FullLookupAtom("$gc_very_verbose");
  AtomGeneratePredInfo = Yap_FullLookupAtom("$generate_pred_info");
  AtomGetwork = Yap_FullLookupAtom("$getwork");
  AtomGetworkSeq = Yap_FullLookupAtom("$getwork_seq");
  AtomGlobal = Yap_LookupAtom("global_sp");
  AtomGoalExpansion = Yap_LookupAtom("goal_expansion");
  AtomHERE = Yap_LookupAtom("\n   <====HERE====>  \n");
  AtomHandleThrow = Yap_FullLookupAtom("$handle_throw");
  AtomHeap = Yap_LookupAtom("heap");
  AtomHeapUsed = Yap_LookupAtom("heapused");
  AtomIDB = Yap_LookupAtom("idb");
  AtomIOMode = Yap_LookupAtom("io_mode");
  AtomId = Yap_LookupAtom("id");
  AtomInf = Yap_LookupAtom("inf");
  AtomInitGoal = Yap_FullLookupAtom("$init_goal");
  AtomInStackExpansion = Yap_LookupAtom("in stack expansion");
  AtomInput = Yap_LookupAtom("input");
  AtomInstantiationError = Yap_LookupAtom("instantiation_error");
  AtomInt = Yap_LookupAtom("int");
  AtomIntOverflow = Yap_LookupAtom("int_overflow");
  AtomInteger = Yap_LookupAtom("integer");
  AtomInternalCompilerError = Yap_LookupAtom("internal_compiler_error");
  AtomIs = Yap_LookupAtom("is");
  AtomKey = Yap_LookupAtom("key");
  AtomLDLibraryPath = Yap_LookupAtom("LD_LIBRARY_PATH");
  AtomLONGINT = Yap_LookupAtom("LongInt");
  AtomLT = Yap_LookupAtom("<");
  AtomLastExecuteWithin = Yap_FullLookupAtom("$last_execute_within");
  AtomLeash = Yap_FullLookupAtom("$leash");
  AtomList = Yap_LookupAtom("list");
  AtomLive = Yap_FullLookupAtom("$live");
  AtomLoadAnswers = Yap_LookupAtom("load_answers");
  AtomLocal = Yap_LookupAtom("local_sp");
  AtomLocalA = Yap_LookupAtom("local");
  AtomMaxArity = Yap_LookupAtom("max_arity");
  AtomMaxFiles = Yap_LookupAtom("max_files");
  AtomMegaClause = Yap_FullLookupAtom("$mega_clause");
  AtomMetaCall = Yap_FullLookupAtom("$call");
  AtomMfClause = Yap_FullLookupAtom("$mf_clause");
  AtomMinus = Yap_LookupAtom("-");
  AtomModify = Yap_LookupAtom("modify");
  AtomMultiFile = Yap_FullLookupAtom("$multi_file");
  AtomMutable = Yap_LookupAtom("mutable");
  AtomMutableVariable = Yap_FullLookupAtom("$mutable_variable");
  AtomMyddasDB = Yap_FullLookupAtom("$myddas_db");
  AtomMyddasGoal = Yap_FullLookupAtom("$myddas_goal");
  AtomMyddasHost = Yap_FullLookupAtom("$myddas_host");
  AtomMyddasPass = Yap_FullLookupAtom("$myddas_pass");
  AtomMyddasUser = Yap_FullLookupAtom("$myddas_user");
  AtomMyddasVersionName = Yap_FullLookupAtom("$myddas_version_name");
  AtomNan = Yap_LookupAtom("nan");
  AtomNb = Yap_LookupAtom("nb");
  AtomNbTerm = Yap_LookupAtom("nb_term");
  AtomNew = Yap_LookupAtom("new");
  AtomNoMemory = Yap_LookupAtom("no_memory");
  AtomNonEmptyList = Yap_LookupAtom("non_empty_list");
  AtomNot = Yap_LookupAtom("\\+");
  AtomNotImplemented = Yap_LookupAtom("not_implemented");
  AtomNotLessThanZero = Yap_LookupAtom("not_less_than_zero");
  AtomNotNewline = Yap_LookupAtom("not_newline");
  AtomNotZero = Yap_LookupAtom("not_zero");
  AtomNumber = Yap_LookupAtom("number");
  AtomOff = Yap_LookupAtom("off");
  AtomOffline = Yap_LookupAtom("offline");
  AtomOn = Yap_LookupAtom("on");
  AtomOnline = Yap_LookupAtom("online");
  AtomOpen = Yap_LookupAtom("open");
  AtomOperatingSystemError = Yap_LookupAtom("operating_system_error");
  AtomOperator = Yap_LookupAtom("operator");
  AtomOperatorPriority = Yap_LookupAtom("operator_priority");
  AtomOperatorSpecifier = Yap_LookupAtom("operator_specifier");
  AtomOtherwise = Yap_LookupAtom("otherwise");
  AtomOutOfAttvarsError = Yap_LookupAtom("out_of_attvars_error");
  AtomOutOfAuxspaceError = Yap_LookupAtom("out_of_auxspace_error");
  AtomOutOfHeapError = Yap_LookupAtom("out_of_heap_error");
  AtomOutOfRange = Yap_LookupAtom("out_of_range");
  AtomOutOfStackError = Yap_LookupAtom("out_of_stack_error");
  AtomOutOfTrailError = Yap_LookupAtom("out_of_trail_error");
  AtomOutput = Yap_LookupAtom("output");
  AtomPrologCommonsDir = Yap_LookupAtom("prolog_commons_directory");
  AtomPastEndOfStream = Yap_LookupAtom("past_end_of_stream");
  AtomPermissionError = Yap_LookupAtom("permission_error");
  AtomPi = Yap_LookupAtom("pi");
  AtomPipe = Yap_LookupAtom("pipe");
  AtomPlus = Yap_LookupAtom("+");
  AtomPointer = Yap_LookupAtom("pointer");
  AtomPortray = Yap_FullLookupAtom("$portray");
  AtomPredicateIndicator = Yap_LookupAtom("predicate_indicator");
  AtomPrimitive = Yap_LookupAtom("primitive");
  AtomPrivateProcedure = Yap_LookupAtom("private_procedure");
  AtomProcedure = Yap_LookupAtom("procedure");
  AtomProfile = Yap_FullLookupAtom("$profile");
  AtomProlog = Yap_LookupAtom("prolog");
  AtomPtr = Yap_LookupAtom("ptr");
  AtomQuery = Yap_LookupAtom("?-");
  AtomQueue = Yap_LookupAtom("queue");
  AtomQuiet = Yap_LookupAtom("quiet");
  AtomRadix = Yap_LookupAtom("radix");
  AtomRandom = Yap_LookupAtom("random");
  AtomRead = Yap_LookupAtom("read");
  AtomReadutil = Yap_LookupAtom("readutil");
  AtomRecordedP = Yap_FullLookupAtom("$recordep");
  AtomRecordedWithKey = Yap_FullLookupAtom("$recorded_with_key");
  AtomRedoFreeze = Yap_FullLookupAtom("$redo_freeze");
  AtomRefoundVar = Yap_FullLookupAtom("$I_FOUND_THE_VARIABLE_AGAIN");
  AtomRepeat = Yap_LookupAtom("repeat");
  AtomRepeatSpace = Yap_LookupAtom("repeat ");
  AtomReposition = Yap_LookupAtom("reposition");
  AtomRepresentationError = Yap_LookupAtom("representation_error");
  AtomResize = Yap_LookupAtom("resize");
  AtomResourceError = Yap_LookupAtom("resource_error");
  AtomRestoreRegs = Yap_FullLookupAtom("$restore_regs");
  AtomRetryCounter = Yap_LookupAtom("retry_counter");
  AtomRTree = Yap_LookupAtom("rtree");
  AtomSafe = Yap_FullLookupAtom("$safe");
  AtomSafeCallCleanup = Yap_FullLookupAtom("$safe_call_cleanup");
  AtomSame = Yap_LookupAtom("==");
  AtomSemic = Yap_LookupAtom(";");
  AtomShiftCountOverflow = Yap_LookupAtom("shift_count_overflow");
  AtomSigAlarm = Yap_LookupAtom("sig_alarm");
  AtomSigBreak = Yap_LookupAtom("sig_break");
  AtomSigCreep = Yap_LookupAtom("sig_creep");
  AtomSigDebug = Yap_LookupAtom("sig_debug");
  AtomSigDelayCreep = Yap_LookupAtom("sig_delay_creep");
  AtomSigHup = Yap_LookupAtom("sig_hup");
  AtomSigInt = Yap_LookupAtom("sig_int");
  AtomSigIti = Yap_LookupAtom("sig_iti");
  AtomSigPending = Yap_FullLookupAtom("$sig_pending");
  AtomSigPipe = Yap_LookupAtom("sig_pipe");
  AtomSigStackDump = Yap_LookupAtom("sig_stack_dump");
  AtomSigStatistics = Yap_LookupAtom("sig_statistic");
  AtomSigTrace = Yap_LookupAtom("sig_trace");
  AtomSigUsr1 = Yap_LookupAtom("sig_usr1");
  AtomSigUsr2 = Yap_LookupAtom("sig_usr2");
  AtomSigVTAlarm = Yap_LookupAtom("sig_vtalarm");
  AtomSigWakeUp = Yap_LookupAtom("sig_wake_up");
  AtomSlash = Yap_LookupAtom("/");
  AtomSocket = Yap_LookupAtom("socket");
  AtomSourceSink = Yap_LookupAtom("source_sink");
  AtomSpy = Yap_FullLookupAtom("$spy");
  AtomStack = Yap_LookupAtom("stack");
  AtomStackFree = Yap_LookupAtom("stackfree");
  AtomStaticClause = Yap_FullLookupAtom("$static_clause");
  AtomStaticProcedure = Yap_LookupAtom("static_procedure");
  AtomStream = Yap_FullLookupAtom("$stream");
  AtomStreams = Yap_FullLookupAtom("streams");
  AtomStreamOrAlias = Yap_LookupAtom("stream_or_alias");
  AtomStreamPos = Yap_FullLookupAtom("$stream_position");
  AtomStreamPosition = Yap_LookupAtom("stream_position");
  AtomString = Yap_LookupAtom("string");
  AtomSwi = Yap_LookupAtom("swi");
  AtomSyntaxError = Yap_LookupAtom("syntax_error");
  AtomSyntaxErrorHandler = Yap_LookupAtom("syntax_error_handler");
  AtomSystem = Yap_LookupAtom("system");
  AtomSystemError = Yap_LookupAtom("system_error");
  AtomSystemLibraryDir = Yap_LookupAtom("system_library_directory");
  AtomTerm = Yap_LookupAtom("term");
  AtomTerms = Yap_LookupAtom("terms");
  AtomTextStream = Yap_LookupAtom("text_stream");
  AtomThreads = Yap_LookupAtom("threads");
  AtomThrow = Yap_LookupAtom("throw");
  AtomTimeOutSpec = Yap_LookupAtom("time_out_spec");
  AtomTimeoutError = Yap_LookupAtom("timeout_error");
  AtomTopLevelGoal = Yap_FullLookupAtom("$top_level_goal");
  AtomTopThreadGoal = Yap_FullLookupAtom("$top_thread_goal");
  AtomTrail = Yap_LookupAtom("trail");
  AtomTrue = Yap_LookupAtom("true");
  AtomTty = Yap_LookupAtom("tty");
  AtomTtys = Yap_LookupAtom("ttys");
  AtomTypeError = Yap_LookupAtom("type_error");
  AtomUndefined = Yap_LookupAtom("undefined");
  AtomUndefp = Yap_FullLookupAtom("$undefp");
  AtomUnderflow = Yap_LookupAtom("underflow");
  AtomUnificationStack = Yap_LookupAtom("unification_stack");
  AtomUnsignedByte = Yap_LookupAtom("unsigned_byte");
  AtomUnsignedChar = Yap_LookupAtom("unsigned_char");
  AtomUser = Yap_LookupAtom("user");
  AtomUserErr = Yap_LookupAtom("user_error");
  AtomUserIn = Yap_LookupAtom("user_input");
  AtomUserOut = Yap_LookupAtom("user_output");
  AtomVBar = Yap_LookupAtom("|");
  AtomVar = Yap_FullLookupAtom("$VAR");
  AtomVariable = Yap_LookupAtom("variable");
  AtomVersionNumber = Yap_FullLookupAtom("$version_name");
  AtomWakeUpGoal = Yap_FullLookupAtom("$wake_up_goal");
  AtomWhen = Yap_FullLookupAtom("$when");
  AtomWrite = Yap_LookupAtom("write");
  AtomYapHacks = Yap_LookupAtom("yap_hacks");
  AtomZeroDivisor = Yap_LookupAtom("zero_divisor");
  FunctorAfInet = Yap_MkFunctor(AtomAfInet,2);
  FunctorAfLocal = Yap_MkFunctor(AtomAfLocal,1);
  FunctorAfUnix = Yap_MkFunctor(AtomAfUnix,1);
  FunctorAltNot = Yap_MkFunctor(AtomAltNot,1);
  FunctorArg = Yap_MkFunctor(AtomArg,3);
  FunctorArrayEntry = Yap_MkFunctor(AtomArrayAccess,3);
  FunctorArrow = Yap_MkFunctor(AtomArrow,2);
  FunctorAssert = Yap_MkFunctor(AtomAssert,2);
  FunctorAtFoundOne = Yap_MkFunctor(AtomFoundVar,2);
  FunctorAtom = Yap_MkFunctor(AtomAtom,1);
  FunctorAtt1 = Yap_MkFunctor(AtomAtt1,3);
  FunctorAttGoal = Yap_MkFunctor(AtomAttDo,2);
  FunctorBraces = Yap_MkFunctor(AtomBraces,1);
  FunctorCall = Yap_MkFunctor(AtomCall,1);
  FunctorCatch = Yap_MkFunctor(AtomCatch,3);
  FunctorChangeModule = Yap_MkFunctor(AtomChangeModule,1);
  FunctorCleanCall = Yap_MkFunctor(AtomCleanCall,2);
  FunctorClist = Yap_MkFunctor(AtomWhen,4);
  FunctorComma = Yap_MkFunctor(AtomComma,2);
  FunctorContext2 = Yap_MkFunctor(AtomContext,2);
  FunctorConsistencyError = Yap_MkFunctor(AtomConsistencyError,1);
  FunctorCreep = Yap_MkFunctor(AtomCreep,1);
  FunctorCsult = Yap_MkFunctor(AtomCsult,1);
  FunctorCurrentModule = Yap_MkFunctor(AtomCurrentModule,1);
  FunctorCutBy = Yap_MkFunctor(AtomCutBy,1);
  FunctorDiff = Yap_MkFunctor(AtomDiff,2);
  FunctorDoLogUpdClause = Yap_MkFunctor(AtomDoLogUpdClause,6);
  FunctorDoLogUpdClause0 = Yap_MkFunctor(AtomDoLogUpdClause0,6);
  FunctorDoLogUpdClauseErase = Yap_MkFunctor(AtomDoLogUpdClauseErase,6);
  FunctorDoStaticClause = Yap_MkFunctor(AtomDoStaticClause,5);
  FunctorDomainError = Yap_MkFunctor(AtomDomainError,2);
  FunctorDot = Yap_MkFunctor(AtomDot,2);
  FunctorDot10 = Yap_MkFunctor(AtomDot,10);
  FunctorDot11 = Yap_MkFunctor(AtomDot,11);
  FunctorDot12 = Yap_MkFunctor(AtomDot,12);
  FunctorDot2 = Yap_MkFunctor(AtomDot,2);
  FunctorDot3 = Yap_MkFunctor(AtomDot,3);
  FunctorDot4 = Yap_MkFunctor(AtomDot,4);
  FunctorDot5 = Yap_MkFunctor(AtomDot,5);
  FunctorDot6 = Yap_MkFunctor(AtomDot,6);
  FunctorDot7 = Yap_MkFunctor(AtomDot,7);
  FunctorDot8 = Yap_MkFunctor(AtomDot,8);
  FunctorDot9 = Yap_MkFunctor(AtomDot,9);
  FunctorEq = Yap_MkFunctor(AtomEq,2);
  FunctorError = Yap_MkFunctor(AtomError,2);
  FunctorEvaluationError = Yap_MkFunctor(AtomEvaluationError,1);
  FunctorExecute2InMod = Yap_MkFunctor(AtomExecuteWoMod,2);
  FunctorExecuteInMod = Yap_MkFunctor(AtomExecuteInMod,2);
  FunctorExecuteWithin = Yap_MkFunctor(AtomExecuteWithin,1);
  FunctorExistenceError = Yap_MkFunctor(AtomExistenceError,2);
  FunctorFunctor = Yap_MkFunctor(AtomFunctor,3);
  FunctorGAtom = Yap_MkFunctor(AtomAtom,1);
  FunctorGAtomic = Yap_MkFunctor(AtomAtomic,1);
  FunctorGCompound = Yap_MkFunctor(AtomCompound,1);
  FunctorGFloat = Yap_MkFunctor(AtomFloat,1);
  FunctorGFormatAt = Yap_MkFunctor(AtomFormatAt,2);
  FunctorGInteger = Yap_MkFunctor(AtomInteger,1);
  FunctorGNumber = Yap_MkFunctor(AtomNumber,1);
  FunctorGPrimitive = Yap_MkFunctor(AtomPrimitive,1);
  FunctorGVar = Yap_MkFunctor(AtomGVar,1);
  FunctorGeneratePredInfo = Yap_MkFunctor(AtomGeneratePredInfo,4);
  FunctorGoalExpansion = Yap_MkFunctor(AtomGoalExpansion,3);
  FunctorHandleThrow = Yap_MkFunctor(AtomHandleThrow,3);
  FunctorId = Yap_MkFunctor(AtomId,1);
  FunctorIs = Yap_MkFunctor(AtomIs,2);
  FunctorLastExecuteWithin = Yap_MkFunctor(AtomLastExecuteWithin,1);
  FunctorList = Yap_MkFunctor(AtomDot,2);
  FunctorMegaClause = Yap_MkFunctor(AtomMegaClause,2);
  FunctorMetaCall = Yap_MkFunctor(AtomMetaCall,4);
  FunctorMinus = Yap_MkFunctor(AtomMinus,2);
  FunctorModule = Yap_MkFunctor(AtomColomn,2);
  FunctorMultiFileClause = Yap_MkFunctor(AtomMfClause,5);
  FunctorMutable = Yap_MkFunctor(AtomMutableVariable,(sizeof(timed_var)/sizeof(CELL)));
  FunctorNotImplemented = Yap_MkFunctor(AtomNotImplemented,2);
  FunctorNBQueue = Yap_MkFunctor(AtomQueue,5);
  FunctorNot = Yap_MkFunctor(AtomNot,1);
  FunctorOr = Yap_MkFunctor(AtomSemic,2);
  FunctorPermissionError = Yap_MkFunctor(AtomPermissionError,3);
  FunctorPortray = Yap_MkFunctor(AtomPortray,1);
  FunctorPrologConstraint = Yap_MkFunctor(AtomProlog,2);
  FunctorQuery = Yap_MkFunctor(AtomQuery,1);
  FunctorRecordedWithKey = Yap_MkFunctor(AtomRecordedWithKey,6);
  FunctorRedoFreeze = Yap_MkFunctor(AtomRedoFreeze,3);
  FunctorRepresentationError = Yap_MkFunctor(AtomRepresentationError,1);
  FunctorResourceError = Yap_MkFunctor(AtomResourceError,1);
  FunctorRestoreRegs = Yap_MkFunctor(AtomRestoreRegs,2);
  FunctorRestoreRegs1 = Yap_MkFunctor(AtomRestoreRegs,1);
  FunctorSafe = Yap_MkFunctor(AtomSafe,1);
  FunctorSafeCallCleanup = Yap_MkFunctor(AtomSafeCallCleanup,4);
  FunctorSame = Yap_MkFunctor(AtomSame,2);
  FunctorSlash = Yap_MkFunctor(AtomSlash,2);
  FunctorStaticClause = Yap_MkFunctor(AtomStaticClause,1);
  FunctorStream = Yap_MkFunctor(AtomStream,1);
  FunctorStreamEOS = Yap_MkFunctor(AtomEndOfStream,1);
  FunctorStreamPos = Yap_MkFunctor(AtomStreamPos,5);
  FunctorSyntaxError = Yap_MkFunctor(AtomSyntaxError,7);
  FunctorThreadRun = Yap_MkFunctor(AtomTopThreadGoal,2);
  FunctorThrow = Yap_MkFunctor(AtomThrow,1);
  FunctorTimeoutError = Yap_MkFunctor(AtomTimeoutError,2);
  FunctorTypeError = Yap_MkFunctor(AtomTypeError,2);
  FunctorUMinus = Yap_MkFunctor(AtomMinus,1);
  FunctorUPlus = Yap_MkFunctor(AtomPlus,1);
  FunctorVBar = Yap_MkFunctor(AtomVBar,2);
  FunctorVar = Yap_MkFunctor(AtomVar,1);
